name: Build and Test React Application

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install and test
        run: |
          npm install --legacy-peer-deps
          npm run build --if-present
          npm test

      - name: Generate JSDoc
        run: npm run jsdoc

      - name: Start Docker Stack for E2E
        run: |
          docker compose -f docker-compose.ci.yml up -d --build
          sleep 60 # attendre que MySQL soit prêt
          docker compose -f docker-compose.ci.yml ps
          docker compose -f docker-compose.ci.yml logs db
          echo "On vérifie que l'API FastAPI répond..."
          timeout 120 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:8000/users)" != "200" ]]; do sleep 2; done' || true
          echo "API check terminé"

      - name: Debug API connectivity
        run: |
          echo "Test des endpoints..."
          curl -v http://localhost:8000/ || echo "Endpoint racine KO"
          curl -v http://localhost:8000/users || echo "Endpoint users KO"
          echo "Test de React..."
          curl -I http://localhost:3000 || echo "React app KO"
          docker compose -f docker-compose.ci.yml logs react | tail -20
          docker compose -f docker-compose.ci.yml logs server | tail -20

      - name: Run E2E tests with Cypress
        uses: cypress-io/github-action@v6
        with:
          install: false
          wait-on: "http://localhost:3000, http://localhost:8000/users"
          wait-on-timeout: 180
          browser: chrome
        env:
          CYPRESS_viewportWidth: 1920
          CYPRESS_viewportHeight: 1080

      - name: Stop Docker Stack
        run: |
          docker compose -f docker-compose.ci.yml down

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          directory: coverage
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: build
          if-no-files-found: error
      - name: Authenticate with npm
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPMTOKEN }}" > ~/.npmrc
      - name: check version
        run: |
          LOCAL_VERSION=$(node -p "require('./package.json').version")
          NPM_VERSION=$(npm show fatibelkoudia-employer-registration version)
           if [ "$LOCAL_VERSION" != "$NPM_VERSION" ]; then
             echo "NEW_VERSION=true" >> $GITHUB_ENV
           else
             echo "NEW_VERSION=false" >> $GITHUB_ENV
           fi
      - name: build and publish package on NPM
        if: env.NEW_VERSION == 'true'
        run: |
          npm run build-npm-ci
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPMTOKEN }}

  # Deploy job
  deploy:
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{steps.deployment.outputs.page_url}}
    runs-on: ubuntu-latest
    # Grant GITHUB_TOKEN the permissions required to make a page deployment
    permissions:
      pages: write
      id-token: write
    # Add a dependency to the build job
    needs: build_test
    # Specify runner + deployment step
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
